Hadoop Distributed File System

HDFS is a Java-based file system that provides scalable and reliable data storage, and it was designed to span large clusters of commodity servers. HDFS has demonstrated production scalability of up to 200 PB of storage and a single cluster of 4500 servers, supporting close to a billion files and blocks. When that quantity and quality of enterprise data is available in HDFS, and YARN enables multiple data access applications to process it, Hadoop users can confidently answer questions that eluded previous data platforms.
HDFS is a scalable, fault-tolerant, distributed storage system that works closely with a wide variety of concurrent data access applications, coordinated by YARN. HDFS will “just work” under a variety of physical and systemic circumstances. By distributing storage and computation across many servers, the combined storage resource can grow linearly with demand while remaining economical at every amount of storage.
HDFS and YARN form the data management layer of Apache Hadoop. YARN is the architectural center of Hadoop, the resource management framework that enables the enterprise to process data in multiple ways simultaneously—for batch, interactive and real-time data workloads on one shared dataset. YARN provides the resource management and HDFS provides the scalable, fault-tolerant, cost-efficient storage for big data.

These specific features ensure that data is stored efficiently in a Hadoop cluster and that it is highly available:

Feature             	Description
Rack awareness	      Considers a node’s physical location when allocating storage and scheduling tasks
Minimal data motion	  Hadoop moves compute processes to the data on HDFS and not the other way around. Processing tasks can occur on the physical node where the data resides, which significantly reduces network I/O and provides very high aggregate bandwidth.
Utilities	            Dynamically diagnose the health of the file system and rebalance the data on different nodes
Rollback	            Allows operators to bring back the previous version of HDFS after an upgrade, in case of human or systemic errors
Standby NameNode	    Provides redundancy and supports high availability (HA)
Operability	          HDFS requires minimal operator intervention, allowing a single operator to maintain a cluster of 1000s of nodes
